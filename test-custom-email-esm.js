/**
 * Script para testar a fun√ß√£o Edge de e-mail personalizado
 * 
 * Este script simula uma chamada para a fun√ß√£o Edge de e-mail personalizado,
 * permitindo testar se est√° funcionando corretamente antes de implant√°-la.
 * 
 * Atualizado para usar o servidor SMTP da Hostinger (validar@geni.chat)
 */

import { createClient } from '@supabase/supabase-js';
import * as readline from 'readline';

// Configura√ß√£o do cliente Supabase
const SUPABASE_URL = 'https://hpovwcaskorzzrpphgkc.supabase.co';
let SUPABASE_KEY = 'process.env.SUPABASE_ANON_KEY || ""'; // Chave an√¥nima do projeto

// Fun√ß√£o para obter input do usu√°rio
const question = (query) => {
  const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
  });
  
  return new Promise((resolve) => {
    rl.question(query, (answer) => {
      rl.close();
      resolve(answer);
    });
  });
};

// Fun√ß√£o para testar a fun√ß√£o Edge
async function testCustomEmailFunction() {
  console.log('üß™ Teste da fun√ß√£o Edge de e-mail personalizado (Hostinger)');
  console.log('--------------------------------------------------------');
  
  try {
    // Inicializar cliente Supabase
    const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);
    
    // Usar e-mail de teste fixo ou solicitar um
    const email = 'test@example.com'; // Substitua por seu email para teste
    console.log(`Usando e-mail de teste: ${email}`);
    
    // Criar payload de teste
    const payload = {
      email: email,
      type: 'signup',
      token: 'test-token-' + Date.now(),
      redirect_to: 'http://localhost:3000/confirmar-email-sucesso',
      metadata: {
        name: 'Usu√°rio de Teste'
      }
    };
    
    console.log('\nüìß Enviando solicita√ß√£o para a fun√ß√£o Edge...');
    console.log('Payload:', JSON.stringify(payload, null, 2));
    console.log('\n‚ö†Ô∏è Importante: Este teste usar√° o servidor SMTP da Hostinger (validar@geni.chat)\n');
    
    // Exibir URL da fun√ß√£o Edge que ser√° chamada
    console.log(`\nüîó Chamando fun√ß√£o Edge em: ${SUPABASE_URL}/functions/v1/custom-email`);
    
    // Chamar a fun√ß√£o Edge
    const { data, error } = await supabase.functions.invoke('custom-email', {
      body: payload
    });
    
    // Verificar resultado
    if (error) {
      console.error('‚ùå Erro ao chamar a fun√ß√£o Edge:', error);
      
      // Tentar obter a resposta completa
      if (error.context && error.context.text) {
        try {
          const errorResponse = await error.context.text();
          console.error('Detalhes do erro:', errorResponse);
        } catch (textError) {
          console.error('N√£o foi poss√≠vel ler o corpo da resposta:', textError);
        }
      }
    } else {
      console.log('‚úÖ Fun√ß√£o Edge executada com sucesso!');
      console.log('Resposta:', data);
      
      console.log('\nüîç Verifique:');
      console.log(`1. Se o e-mail foi recebido em ${email}`);
      console.log('2. Se o remetente √© validar@geni.chat');
      console.log('3. Se o template do e-mail est√° formatado corretamente');
      console.log('4. Se o bot√£o de confirma√ß√£o funciona como esperado');
      
      console.log('\nüìù Para verificar os logs da fun√ß√£o:');
      console.log('supabase functions logs custom-email --project-ref hpovwcaskorzzrpphgkc');
    }
  } catch (error) {
    console.error('‚ùå Erro durante o teste:', error);
  }
}

// Executar o teste
testCustomEmailFunction();
