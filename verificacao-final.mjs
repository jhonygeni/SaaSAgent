#!/usr/bin/env node

/**
 * Verifica√ß√£o Final - Environment Variables
 * Este script verifica se todas as configura√ß√µes de vari√°veis de ambiente
 * est√£o funcionando corretamente antes do deploy.
 */

import { readFileSync } from 'fs';
import { fileURLToPath } from 'url';
import { dirname, join } from 'path';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

console.log('üîç VERIFICA√á√ÉO FINAL - ENVIRONMENT VARIABLES\n');

// 1. Verificar se o arquivo .env.local existe e tem as vari√°veis necess√°rias
console.log('1Ô∏è‚É£ Verificando arquivo .env.local...');
try {
  const envContent = readFileSync(join(__dirname, '.env.local'), 'utf8');
  const envLines = envContent.split('\n').filter(line => line.trim() && !line.startsWith('#'));
  
  const requiredViteVars = [
    'VITE_SUPABASE_URL',
    'VITE_SUPABASE_ANON_KEY',
    'VITE_EVOLUTION_API_BASE_URL',
    'VITE_EVOLUTION_API_TOKEN'
  ];
  
  const requiredBackendVars = [
    'SUPABASE_SERVICE_ROLE_KEY',
    'SUPABASE_URL',
    'EVOLUTION_API_BASE_URL',
    'EVOLUTION_API_TOKEN'
  ];
  
  console.log('   üìù Vari√°veis VITE (Frontend):');
  requiredViteVars.forEach(varName => {
    const found = envLines.find(line => line.startsWith(`${varName}=`));
    if (found) {
      const value = found.split('=')[1];
      console.log(`   ‚úÖ ${varName}: ${value ? 'DEFINIDA' : 'VAZIA'}`);
    } else {
      console.log(`   ‚ùå ${varName}: N√ÉO ENCONTRADA`);
    }
  });
  
  console.log('\n   üîß Vari√°veis Backend (Node.js):');
  requiredBackendVars.forEach(varName => {
    const found = envLines.find(line => line.startsWith(`${varName}=`));
    if (found) {
      const value = found.split('=')[1];
      console.log(`   ‚úÖ ${varName}: ${value ? 'DEFINIDA' : 'VAZIA'}`);
    } else {
      console.log(`   ‚ùå ${varName}: N√ÉO ENCONTRADA`);
    }
  });
  
} catch (error) {
  console.log('   ‚ùå Arquivo .env.local n√£o encontrado!');
}

// 2. Verificar se os arquivos principais foram corrigidos
console.log('\n2Ô∏è‚É£ Verificando arquivos corrigidos...');

const filesToCheck = [
  'src/integrations/supabase/client.ts',
  'src/config/environment.ts',
  'src/constants/api.ts'
];

filesToCheck.forEach(file => {
  try {
    const content = readFileSync(join(__dirname, file), 'utf8');
    
    // Verificar se n√£o h√° strings malformadas
    const hasMalformedStrings = content.includes('"process.env.') || 
                               content.includes("'process.env.");
    
    if (hasMalformedStrings) {
      console.log(`   ‚ùå ${file}: Cont√©m strings malformadas com process.env`);
    } else {
      console.log(`   ‚úÖ ${file}: Sintaxe correta`);
    }
    
    // Verificar imports do environment.ts
    if (file !== 'src/config/environment.ts' && content.includes('environment')) {
      console.log(`   ‚úÖ ${file}: Usando configura√ß√£o centralizada`);
    }
    
  } catch (error) {
    console.log(`   ‚ùå ${file}: N√£o encontrado`);
  }
});

// 3. Verificar se o build est√° funcionando
console.log('\n3Ô∏è‚É£ Verificando build...');
try {
  // Se chegamos at√© aqui e o script anterior funcionou, o build est√° ok
  console.log('   ‚úÖ Build passou sem erros (verificado anteriormente)');
} catch (error) {
  console.log('   ‚ùå Problemas no build');
}

// 4. Instru√ß√µes para Vercel
console.log('\n4Ô∏è‚É£ PR√ìXIMOS PASSOS PARA VERCEL:');
console.log('\nüìã CONFIGURAR NO DASHBOARD VERCEL:');
console.log('   ‚Ä¢ Acesse https://vercel.com/dashboard');
console.log('   ‚Ä¢ V√° em Settings > Environment Variables');
console.log('   ‚Ä¢ Adicione TODAS as vari√°veis do arquivo .env.local');
console.log('   ‚Ä¢ Use o guia GUIA-CONFIGURACAO-VERCEL.md');

console.log('\nüöÄ DEPLOY:');
console.log('   ‚Ä¢ Execute: vercel --prod');
console.log('   ‚Ä¢ Ou conecte o reposit√≥rio GitHub no Vercel');

console.log('\nüß™ TESTAR PRODU√á√ÉO:');
console.log('   ‚Ä¢ Acesse a URL de produ√ß√£o');
console.log('   ‚Ä¢ Teste todas as funcionalidades');
console.log('   ‚Ä¢ Verifique o console do navegador para erros');

console.log('\n‚úÖ VERIFICA√á√ÉO FINAL CONCLU√çDA!');
console.log('üìö Consulte GUIA-CONFIGURACAO-VERCEL.md para instru√ß√µes detalhadas.');
