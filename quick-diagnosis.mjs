#!/usr/bin/env node

// Diagn√≥stico r√°pido do problema
const supabaseUrl = 'https://hpovwcaskorzzrpphgkc.supabase.co';
const serviceKey = 'process.env.SUPABASE_ANON_KEY || ""';

async function quickCheck() {
  console.log('üîç DIAGN√ìSTICO R√ÅPIDO');
  
  // 1. Testar fun√ß√£o de email
  try {
    const response = await fetch(`${supabaseUrl}/functions/v1/custom-email`, {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${serviceKey}`,
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ type: 'signup', email: 'teste@exemplo.com' })
    });
    const result = await response.text();
    console.log('‚úÖ Fun√ß√£o email:', result);
  } catch (error) {
    console.log('‚ùå Fun√ß√£o email falhou:', error.message);
  }

  // 2. Verificar usu√°rios
  try {
    const response = await fetch(`${supabaseUrl}/auth/v1/admin/users`, {
      headers: {
        'Authorization': `Bearer ${serviceKey}`,
        'apikey': serviceKey
      }
    });
    const users = await response.json();
    console.log(`‚úÖ Usu√°rios encontrados: ${users.users?.length || 0}`);
    if (users.users?.length > 0) {
      users.users.forEach((user, i) => {
        console.log(`   ${i+1}. ${user.email} - Confirmado: ${user.email_confirmed_at ? 'SIM' : 'N√ÉO'}`);
      });
    }
  } catch (error) {
    console.log('‚ùå Erro ao verificar usu√°rios:', error.message);
  }

  // 3. Verificar perfis
  try {
    const response = await fetch(`${supabaseUrl}/rest/v1/profiles?select=*`, {
      headers: {
        'Authorization': `Bearer ${serviceKey}`,
        'apikey': serviceKey
      }
    });
    const profiles = await response.json();
    console.log(`‚úÖ Perfis encontrados: ${profiles.length || 0}`);
  } catch (error) {
    console.log('‚ùå Erro ao verificar perfis:', error.message);
  }

  console.log('\nüö® PROBLEMA IDENTIFICADO:');
  console.log('1. ‚ùå Auth Hooks N√ÉO configurado (emails n√£o s√£o enviados)');
  console.log('2. ‚ùå SQL Triggers N√ÉO executados (perfis n√£o s√£o criados)');
  
  console.log('\nüîß SOLU√á√ÉO:');
  console.log('Execute as configura√ß√µes em: EXECUTAR-AGORA-MANUAL.md');
}

quickCheck();
