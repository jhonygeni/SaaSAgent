#!/bin/bash

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}===============================================================${NC}"
echo -e "${BLUE}    CORRE√á√ïES COMPLETAS - CONVERSAAI BRASIL                   ${NC}"
echo -e "${BLUE}===============================================================${NC}"
echo ""

# Verificar se estamos no diret√≥rio correto
if [ ! -f "./src/context/UserContext.tsx" ]; then
  echo -e "${RED}‚ùå ERRO: Este script deve ser executado da raiz do projeto conversa-ai-brasil.${NC}"
  exit 1
fi

# Se√ß√£o de corre√ß√£o de seguran√ßa
echo -e "${YELLOW}üìã SEC√á√ÉO 1: CORRE√á√ïES DE SEGURAN√áA${NC}"
echo -e "Aplicando corre√ß√µes para problemas de seguran√ßa e credenciais expostas..."

# Verificar se tem permiss√£o de execu√ß√£o
if [ ! -x "./apply-security-fixes.sh" ]; then
  echo -e "Dando permiss√£o de execu√ß√£o aos scripts de seguran√ßa..."
  chmod +x ./apply-security-fixes.sh
  chmod +x ./check-env-vars.sh
  chmod +x ./check-credentials-exposure.sh
fi

# Executar script de corre√ß√µes de seguran√ßa
./apply-security-fixes.sh
echo ""

# Verificar configura√ß√£o das fun√ß√µes Edge
echo -e "${YELLOW}üìã SEC√á√ÉO 2: VERIFICANDO FUN√á√ïES EDGE${NC}"
echo -e "Verificando configura√ß√£o das fun√ß√µes Edge..."
echo "üîç Passo 2: Diagnosticando a fun√ß√£o check-subscription..."
echo "Este passo √© opcional. Para executar manualmente, use:"
echo "   node diagnose-check-subscription.js seu-email@exemplo.com sua-senha"
echo ""

# Passo 3: Aplicar trigger SQL para gerenciar usu√°rios
echo "üîç Passo 3: Aplicando trigger SQL para gerenciamento autom√°tico de perfis e assinaturas..."
echo "Executando ./apply-user-triggers.sh"
./apply-user-triggers.sh
echo ""

# Passo 4: Atualizar URL do site na fun√ß√£o custom-email
echo "üîç Passo 4: Atualizando SITE_URL na fun√ß√£o custom-email..."
echo "Executando ./update-site-url.sh"
./update-site-url.sh
echo ""

# Passo 5: Exibir instru√ß√µes para configurar o webhook no console
echo "üîç Passo 5: Instru√ß√µes para configura√ß√£o manual do webhook..."
echo "Execute ./update-email-webhook-urls.sh e siga as instru√ß√µes."
echo ""

# Adicionar as verifica√ß√µes de seguran√ßa ao final
echo -e "${YELLOW}üìã SE√á√ÉO FINAL: VERIFICA√á√ïES DE SEGURAN√áA${NC}"

# Verificar se o arquivo .gitignore est√° configurado corretamente
if ! grep -q "^\.env" .gitignore; then
  echo -e "Atualizando .gitignore para incluir arquivos .env..."
  echo -e "\n# Environment files\n.env\n.env.local\n.env.development\n.env.production" >> .gitignore
  echo -e "${GREEN}‚úì .gitignore atualizado${NC}"
else
  echo -e "${GREEN}‚úì .gitignore j√° configurado para ignorar arquivos .env${NC}"
fi

# Executar verifica√ß√£o final de credenciais expostas
echo -e "\nExecutando verifica√ß√£o final de credenciais expostas..."
./check-credentials-exposure.sh

echo -e "${BLUE}===============================================================${NC}"
echo -e "${BLUE}                  CORRE√á√ïES APLICADAS!                         ${NC}"
echo -e "${BLUE}===============================================================${NC}"
echo ""
echo -e "${YELLOW}Se voc√™ ainda encontrar problemas de travamento:${NC}"
echo ""
echo "1. Verifique os logs da fun√ß√£o Edge no console do Supabase para"
echo "   identificar poss√≠veis erros."
echo ""
echo "2. Execute o teste de diagn√≥stico espec√≠fico:"
echo "   node diagnose-check-subscription.js seu-email@exemplo.com sua-senha"
echo ""
echo "3. Se necess√°rio, repare manualmente registros de usu√°rio espec√≠ficos:"
echo "   node repair-user-records.js ID_DO_USUARIO"
echo ""
echo -e "${RED}IMPORTANTE - SEGURAN√áA:${NC}"
echo "1. REVOGUE IMEDIATAMENTE TODAS AS CREDENCIAIS EXPOSTAS"
echo "2. Atualize os arquivos .env com novas credenciais seguras"
echo "3. Atualize as vari√°veis de ambiente no Supabase"
echo ""
echo -e "${GREEN}Para mais informa√ß√µes sobre seguran√ßa, consulte:${NC}"
echo "   ./SECURITY-GUIDE.md"
echo ""
echo -e "${BLUE}===============================================================${NC}"
