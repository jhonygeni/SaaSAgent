#!/bin/bash

echo "üîß DIAGN√ìSTICO E CORRE√á√ÉO DO PROBLEMA DE EMAIL"
echo "=============================================="
echo ""

PROJECT_REF="hpovwcaskorzzrpphgkc"

# 1. Verificar se est√° logado no Supabase
echo "1. üîê Verificando autentica√ß√£o do Supabase CLI..."
if ! supabase projects list > /dev/null 2>&1; then
    echo "‚ùå N√£o est√° logado no Supabase CLI"
    echo "Execute: supabase login"
    exit 1
fi
echo "‚úÖ Autenticado no Supabase CLI"
echo ""

# 2. Verificar se a fun√ß√£o est√° implantada
echo "2. üìß Verificando se a fun√ß√£o custom-email est√° implantada..."
FUNCTION_STATUS=$(supabase functions list --project-ref $PROJECT_REF 2>&1)
if echo "$FUNCTION_STATUS" | grep -q "custom-email"; then
    echo "‚úÖ Fun√ß√£o custom-email encontrada"
else
    echo "‚ùå Fun√ß√£o custom-email N√ÉO est√° implantada - ESTE √â O PROBLEMA!"
    echo ""
    echo "üöÄ Implantando fun√ß√£o custom-email..."
    if supabase functions deploy custom-email --project-ref $PROJECT_REF; then
        echo "‚úÖ Fun√ß√£o custom-email implantada com sucesso!"
    else
        echo "‚ùå Erro ao implantar fun√ß√£o"
        exit 1
    fi
fi
echo ""

# 3. Verificar vari√°veis de ambiente
echo "3. ‚öôÔ∏è Verificando vari√°veis de ambiente..."
SECRETS_STATUS=$(supabase secrets list --project-ref $PROJECT_REF 2>&1)
if echo "$SECRETS_STATUS" | grep -q "SMTP_HOST"; then
    echo "‚úÖ Vari√°veis SMTP encontradas"
else
    echo "‚ùå Vari√°veis SMTP n√£o configuradas"
    echo ""
    echo "üîß Configurando vari√°veis de ambiente..."
    
    # Pedir senha SMTP se n√£o estiver configurada
    if [ -z "$SMTP_PASSWORD" ]; then
        echo "‚ö†Ô∏è  Por favor, informe a senha do email validar@geni.chat:"
        read -s SMTP_PASSWORD
    fi
    
    supabase secrets set \
        SMTP_HOST="smtp.hostinger.com" \
        SMTP_PORT="465" \
        SMTP_USERNAME="validar@geni.chat" \
        SMTP_PASSWORD="$SMTP_PASSWORD" \
        SITE_URL="https://ia.geni.chat" \
        PROJECT_REF="$PROJECT_REF" \
        --project-ref $PROJECT_REF
        
    if [ $? -eq 0 ]; then
        echo "‚úÖ Vari√°veis de ambiente configuradas"
    else
        echo "‚ùå Erro ao configurar vari√°veis"
        exit 1
    fi
fi
echo ""

# 4. Verificar logs da fun√ß√£o
echo "4. üìã Verificando logs da fun√ß√£o (√∫ltimas 10 linhas)..."
echo "Comando: supabase functions logs custom-email --project-ref $PROJECT_REF"
echo ""

# 5. Instru√ß√µes para configurar webhook
echo "5. üîó CONFIGURA√á√ÉO DO WEBHOOK NO CONSOLE DO SUPABASE:"
echo ""
echo "‚ö†Ô∏è  A√á√ÉO MANUAL NECESS√ÅRIA:"
echo "1. Acesse: https://supabase.com/dashboard/project/$PROJECT_REF/auth/templates"
echo "2. Procure por 'Custom Email Template Webhook'"
echo "3. HABILITE a op√ß√£o"
echo "4. Configure a URL: https://$PROJECT_REF.supabase.co/functions/v1/custom-email"
echo "5. Salve as configura√ß√µes"
echo ""

# 6. Testar a fun√ß√£o
echo "6. üß™ Testando a fun√ß√£o..."
echo "Fazendo requisi√ß√£o de teste para a fun√ß√£o..."
RESPONSE=$(curl -s -w "HTTPSTATUS:%{http_code}" -X POST \
    "https://$PROJECT_REF.supabase.co/functions/v1/custom-email" \
    -H "Content-Type: application/json" \
    -d '{"email":"teste@teste.com","type":"signup","token":"test-token"}')

HTTP_STATUS=$(echo $RESPONSE | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
HTTP_BODY=$(echo $RESPONSE | sed -e 's/HTTPSTATUS\:.*//g')

if [ "$HTTP_STATUS" -eq 200 ]; then
    echo "‚úÖ Fun√ß√£o respondeu corretamente (Status: $HTTP_STATUS)"
elif [ "$HTTP_STATUS" -eq 400 ]; then
    echo "‚ö†Ô∏è  Fun√ß√£o ativa mas com erro (Status: $HTTP_STATUS) - Normal para teste"
else
    echo "‚ùå Fun√ß√£o com problema (Status: $HTTP_STATUS)"
    echo "Resposta: $HTTP_BODY"
fi
echo ""

echo "üìã RESUMO:"
echo "=========="
echo ""
echo "Se a fun√ß√£o foi implantada agora, o problema estava em:"
echo "‚ùå A fun√ß√£o custom-email n√£o estava implantada no Supabase"
echo "‚ùå Por isso o sistema usava o email padr√£o (que n√£o funciona)"
echo ""
echo "‚úÖ PR√ìXIMO PASSO:"
echo "1. Configure o webhook manualmente no Console (link acima)"
echo "2. Teste o registro novamente"
echo "3. Se ainda n√£o funcionar, verifique a senha SMTP"
echo ""
echo "üîç Para verificar logs em tempo real:"
echo "supabase functions logs custom-email --project-ref $PROJECT_REF --follow"
