-- Script de Implementa√ß√£o de √çndices de Performance
-- ConversaAI Brasil - Banco de Dados Supabase
-- Execute ap√≥s corre√ß√µes cr√≠ticas

-- =====================================================
-- CRIA√á√ÉO DE √çNDICES DE PERFORMANCE
-- =====================================================

-- Usar CONCURRENTLY para n√£o bloquear opera√ß√µes durante cria√ß√£o
-- IMPORTANTE: CONCURRENTLY s√≥ funciona fora de transa√ß√µes

BEGIN;

DO $$
BEGIN
  RAISE NOTICE '';
  RAISE NOTICE '‚ö° ===== CRIANDO √çNDICES DE PERFORMANCE =====';
  RAISE NOTICE '';
END $$;

COMMIT;

-- =====================================================
-- 1. √çNDICES PARA TABELA MESSAGES (ALTA PRIORIDADE)
-- =====================================================

-- √çndice para consultas por usu√°rio e data (mais comum)
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM pg_indexes 
    WHERE indexname = 'idx_messages_user_created'
  ) THEN
    RAISE NOTICE 'üìß Criando √≠ndice messages por usu√°rio e data...';
    EXECUTE 'CREATE INDEX CONCURRENTLY idx_messages_user_created ON messages(user_id, created_at DESC)';
    RAISE NOTICE '‚úÖ √çndice idx_messages_user_created criado';
  ELSE
    RAISE NOTICE '‚è≠Ô∏è √çndice idx_messages_user_created j√° existe';
  END IF;
END $$;

-- √çndice para consultas por inst√¢ncia e dire√ß√£o
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM pg_indexes 
    WHERE indexname = 'idx_messages_instance_direction'
  ) THEN
    RAISE NOTICE 'üìß Criando √≠ndice messages por inst√¢ncia e dire√ß√£o...';
    EXECUTE 'CREATE INDEX CONCURRENTLY idx_messages_instance_direction ON messages(instance_id, direction)';
    RAISE NOTICE '‚úÖ √çndice idx_messages_instance_direction criado';
  ELSE
    RAISE NOTICE '‚è≠Ô∏è √çndice idx_messages_instance_direction j√° existe';
  END IF;
END $$;

-- √çndice para busca por telefone do remetente
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM pg_indexes 
    WHERE indexname = 'idx_messages_sender_phone'
  ) THEN
    RAISE NOTICE 'üìß Criando √≠ndice messages por telefone do remetente...';
    EXECUTE 'CREATE INDEX CONCURRENTLY idx_messages_sender_phone ON messages(sender_phone) WHERE sender_phone IS NOT NULL';
    RAISE NOTICE '‚úÖ √çndice idx_messages_sender_phone criado';
  ELSE
    RAISE NOTICE '‚è≠Ô∏è √çndice idx_messages_sender_phone j√° existe';
  END IF;
END $$;

-- √çndice para busca por whatsapp_message_id
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM pg_indexes 
    WHERE indexname = 'idx_messages_whatsapp_id'
  ) THEN
    RAISE NOTICE 'üìß Criando √≠ndice messages por WhatsApp ID...';
    EXECUTE 'CREATE INDEX CONCURRENTLY idx_messages_whatsapp_id ON messages(whatsapp_message_id) WHERE whatsapp_message_id IS NOT NULL';
    RAISE NOTICE '‚úÖ √çndice idx_messages_whatsapp_id criado';
  ELSE
    RAISE NOTICE '‚è≠Ô∏è √çndice idx_messages_whatsapp_id j√° existe';
  END IF;
END $$;

-- =====================================================
-- 2. √çNDICES PARA TABELA CONTACTS (M√âDIA PRIORIDADE)
-- =====================================================

-- √çndice √∫nico para usu√°rio e telefone (evita duplicatas)
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM pg_indexes 
    WHERE indexname = 'idx_contacts_user_phone_unique'
  ) THEN
    RAISE NOTICE 'üë• Criando √≠ndice √∫nico contacts por usu√°rio e telefone...';
    EXECUTE 'CREATE UNIQUE INDEX CONCURRENTLY idx_contacts_user_phone_unique ON contacts(user_id, phone_number)';
    RAISE NOTICE '‚úÖ √çndice idx_contacts_user_phone_unique criado';
  ELSE
    RAISE NOTICE '‚è≠Ô∏è √çndice idx_contacts_user_phone_unique j√° existe';
  END IF;
EXCEPTION
  WHEN others THEN
    RAISE WARNING '‚ö†Ô∏è Erro ao criar √≠ndice √∫nico contacts: %. Pode haver duplicatas.', SQLERRM;
END $$;

-- √çndice para busca por nome (texto completo)
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM pg_indexes 
    WHERE indexname = 'idx_contacts_name_search'
  ) THEN
    RAISE NOTICE 'üë• Criando √≠ndice contacts para busca por nome...';
    EXECUTE 'CREATE INDEX CONCURRENTLY idx_contacts_name_search ON contacts USING gin(to_tsvector(''portuguese'', name)) WHERE name IS NOT NULL';
    RAISE NOTICE '‚úÖ √çndice idx_contacts_name_search criado';
  ELSE
    RAISE NOTICE '‚è≠Ô∏è √çndice idx_contacts_name_search j√° existe';
  END IF;
END $$;

-- √çndice para tags
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM pg_indexes 
    WHERE indexname = 'idx_contacts_tags'
  ) THEN
    RAISE NOTICE 'üë• Criando √≠ndice contacts por tags...';
    EXECUTE 'CREATE INDEX CONCURRENTLY idx_contacts_tags ON contacts USING gin(tags) WHERE tags IS NOT NULL';
    RAISE NOTICE '‚úÖ √çndice idx_contacts_tags criado';
  ELSE
    RAISE NOTICE '‚è≠Ô∏è √çndice idx_contacts_tags j√° existe';
  END IF;
END $$;

-- =====================================================
-- 3. √çNDICES PARA TABELA USAGE_STATS (M√âDIA PRIORIDADE)
-- =====================================================

-- √çndice √∫nico para usu√°rio e data
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM pg_indexes 
    WHERE indexname = 'idx_usage_stats_user_date_unique'
  ) THEN
    RAISE NOTICE 'üìä Criando √≠ndice √∫nico usage_stats por usu√°rio e data...';
    EXECUTE 'CREATE UNIQUE INDEX CONCURRENTLY idx_usage_stats_user_date_unique ON usage_stats(user_id, date)';
    RAISE NOTICE '‚úÖ √çndice idx_usage_stats_user_date_unique criado';
  ELSE
    RAISE NOTICE '‚è≠Ô∏è √çndice idx_usage_stats_user_date_unique j√° existe';
  END IF;
EXCEPTION
  WHEN others THEN
    RAISE WARNING '‚ö†Ô∏è Erro ao criar √≠ndice √∫nico usage_stats: %. Pode haver duplicatas.', SQLERRM;
END $$;

-- =====================================================
-- 4. √çNDICES PARA TABELA WHATSAPP_INSTANCES (BAIXA PRIORIDADE)
-- =====================================================

-- √çndice para usu√°rio e status
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM pg_indexes 
    WHERE indexname = 'idx_whatsapp_instances_user_status'
  ) THEN
    RAISE NOTICE 'üì± Criando √≠ndice whatsapp_instances por usu√°rio e status...';
    EXECUTE 'CREATE INDEX CONCURRENTLY idx_whatsapp_instances_user_status ON whatsapp_instances(user_id, status)';
    RAISE NOTICE '‚úÖ √çndice idx_whatsapp_instances_user_status criado';
  ELSE
    RAISE NOTICE '‚è≠Ô∏è √çndice idx_whatsapp_instances_user_status j√° existe';
  END IF;
END $$;

-- √çndice para evolution_instance_id
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM pg_indexes 
    WHERE indexname = 'idx_whatsapp_instances_evolution_id'
  ) THEN
    RAISE NOTICE 'üì± Criando √≠ndice whatsapp_instances por Evolution ID...';
    EXECUTE 'CREATE INDEX CONCURRENTLY idx_whatsapp_instances_evolution_id ON whatsapp_instances(evolution_instance_id) WHERE evolution_instance_id IS NOT NULL';
    RAISE NOTICE '‚úÖ √çndice idx_whatsapp_instances_evolution_id criado';
  ELSE
    RAISE NOTICE '‚è≠Ô∏è √çndice idx_whatsapp_instances_evolution_id j√° existe';
  END IF;
END $$;

-- =====================================================
-- 5. √çNDICES PARA TABELA AGENTS (BAIXA PRIORIDADE)
-- =====================================================

-- √çndice para usu√°rio e status
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM pg_indexes 
    WHERE indexname = 'idx_agents_user_status'
  ) THEN
    RAISE NOTICE 'ü§ñ Criando √≠ndice agents por usu√°rio e status...';
    EXECUTE 'CREATE INDEX CONCURRENTLY idx_agents_user_status ON agents(user_id, status)';
    RAISE NOTICE '‚úÖ √çndice idx_agents_user_status criado';
  ELSE
    RAISE NOTICE '‚è≠Ô∏è √çndice idx_agents_user_status j√° existe';
  END IF;
END $$;

-- √çndice para instance_id
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM pg_indexes 
    WHERE indexname = 'idx_agents_instance_id'
  ) THEN
    RAISE NOTICE 'ü§ñ Criando √≠ndice agents por instance_id...';
    EXECUTE 'CREATE INDEX CONCURRENTLY idx_agents_instance_id ON agents(instance_id) WHERE instance_id IS NOT NULL';
    RAISE NOTICE '‚úÖ √çndice idx_agents_instance_id criado';
  ELSE
    RAISE NOTICE '‚è≠Ô∏è √çndice idx_agents_instance_id j√° existe';
  END IF;
END $$;

-- =====================================================
-- 6. √çNDICES PARA TABELA PAYMENTS (BAIXA PRIORIDADE)
-- =====================================================

-- √çndice para usu√°rio e status
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM pg_indexes 
    WHERE indexname = 'idx_payments_user_status'
  ) THEN
    RAISE NOTICE 'üí≥ Criando √≠ndice payments por usu√°rio e status...';
    EXECUTE 'CREATE INDEX CONCURRENTLY idx_payments_user_status ON payments(user_id, status)';
    RAISE NOTICE '‚úÖ √çndice idx_payments_user_status criado';
  ELSE
    RAISE NOTICE '‚è≠Ô∏è √çndice idx_payments_user_status j√° existe';
  END IF;
END $$;

-- √çndice para stripe_payment_id
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM pg_indexes 
    WHERE indexname = 'idx_payments_stripe_id'
  ) THEN
    RAISE NOTICE 'üí≥ Criando √≠ndice payments por Stripe ID...';
    EXECUTE 'CREATE INDEX CONCURRENTLY idx_payments_stripe_id ON payments(stripe_payment_id) WHERE stripe_payment_id IS NOT NULL';
    RAISE NOTICE '‚úÖ √çndice idx_payments_stripe_id criado';
  ELSE
    RAISE NOTICE '‚è≠Ô∏è √çndice idx_payments_stripe_id j√° existe';
  END IF;
END $$;

-- =====================================================
-- 7. √çNDICES PARA TABELA EVENT_LOGS (BAIXA PRIORIDADE)
-- =====================================================

-- √çndice para tipo de evento e data
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM pg_indexes 
    WHERE indexname = 'idx_event_logs_type_created'
  ) THEN
    RAISE NOTICE 'üìù Criando √≠ndice event_logs por tipo e data...';
    EXECUTE 'CREATE INDEX CONCURRENTLY idx_event_logs_type_created ON event_logs(event_type, created_at DESC)';
    RAISE NOTICE '‚úÖ √çndice idx_event_logs_type_created criado';
  ELSE
    RAISE NOTICE '‚è≠Ô∏è √çndice idx_event_logs_type_created j√° existe';
  END IF;
END $$;

-- √çndice para usu√°rio e data
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM pg_indexes 
    WHERE indexname = 'idx_event_logs_user_created'
  ) THEN
    RAISE NOTICE 'üìù Criando √≠ndice event_logs por usu√°rio e data...';
    EXECUTE 'CREATE INDEX CONCURRENTLY idx_event_logs_user_created ON event_logs(user_id, created_at DESC) WHERE user_id IS NOT NULL';
    RAISE NOTICE '‚úÖ √çndice idx_event_logs_user_created criado';
  ELSE
    RAISE NOTICE '‚è≠Ô∏è √çndice idx_event_logs_user_created j√° existe';
  END IF;
END $$;

-- =====================================================
-- 8. RELAT√ìRIO DE √çNDICES CRIADOS
-- =====================================================

DO $$
BEGIN
  RAISE NOTICE '';
  RAISE NOTICE 'üìä ===== RELAT√ìRIO DE √çNDICES CRIADOS =====';
  RAISE NOTICE '';
END $$;

-- Listar todos os √≠ndices criados
SELECT 
  schemaname,
  tablename,
  indexname,
  indexdef
FROM pg_indexes 
WHERE schemaname = 'public' 
  AND indexname LIKE 'idx_%'
ORDER BY tablename, indexname;

-- Estat√≠sticas de tamanho dos √≠ndices
SELECT 
  schemaname,
  tablename,
  indexname,
  pg_size_pretty(pg_relation_size(indexrelid)) as size
FROM pg_stat_user_indexes 
WHERE schemaname = 'public' 
  AND indexrelname LIKE 'idx_%'
ORDER BY pg_relation_size(indexrelid) DESC;

DO $$
BEGIN
  RAISE NOTICE '';
  RAISE NOTICE '‚úÖ CRIA√á√ÉO DE √çNDICES CONCLU√çDA!';
  RAISE NOTICE '';
  RAISE NOTICE 'üìã RECOMENDA√á√ïES:';
  RAISE NOTICE '1. Monitore a performance das consultas ap√≥s a cria√ß√£o';
  RAISE NOTICE '2. Execute ANALYZE nas tabelas para atualizar estat√≠sticas';
  RAISE NOTICE '3. Considere reindexar periodicamente em caso de alta carga';
  RAISE NOTICE '';
END $$;

-- Atualizar estat√≠sticas das tabelas
ANALYZE messages;
ANALYZE contacts;
ANALYZE usage_stats;
ANALYZE whatsapp_instances;
ANALYZE agents;
ANALYZE payments;
ANALYZE event_logs;
