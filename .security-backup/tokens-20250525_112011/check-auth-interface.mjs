#!/usr/bin/env node

// Script para verificar op√ß√µes de configura√ß√£o de Auth Hooks dispon√≠veis
console.log('üîç Verificando op√ß√µes de Auth Hooks dispon√≠veis...');

const supabaseUrl = 'https://hpovwcaskorzzrpphgkc.supabase.co';
const serviceKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imhwb3Z3Y2Fza29yenpycHBoZ2tjIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0NzgyNjM4NiwiZXhwIjoyMDYzNDAyMzg2fQ.wxxjIh7LBIxHmKJu6P778A9iYm6_zsdC8oQAiE9z0UU';

async function checkAuthOptions() {
  try {
    // Tentar verificar configura√ß√µes atuais de Auth
    const response = await fetch(`${supabaseUrl}/auth/v1/settings`, {
      method: 'GET',
      headers: {
        'Authorization': `Bearer ${serviceKey}`,
        'apikey': serviceKey,
        'Content-Type': 'application/json'
      }
    });

    if (response.ok) {
      const settings = await response.json();
      console.log('‚úÖ Configura√ß√µes atuais de Auth:');
      console.log(JSON.stringify(settings, null, 2));
    } else {
      console.log('‚ùå N√£o foi poss√≠vel acessar configura√ß√µes via API');
      console.log('Status:', response.status);
      console.log('Response:', await response.text());
    }
  } catch (error) {
    console.log('‚ùå Erro ao verificar configura√ß√µes:', error.message);
  }

  console.log('\nüìã Aguardando print da interface do console para instru√ß√µes precisas...');
}

checkAuthOptions();
