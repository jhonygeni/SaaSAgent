#!/bin/bash

# Script de teste completo para o sistema de confirma√ß√£o de email
# Verifica se todas as corre√ß√µes est√£o funcionando

set -e

echo "üîç TESTE COMPLETO DO SISTEMA DE CONFIRMA√á√ÉO DE EMAIL"
echo "=================================================="

# Fun√ß√£o para verificar se comando existe
command_exists() {
    command -v "$1" >/dev/null 2>&1
}

# Verificar depend√™ncias
echo "üìã Verificando depend√™ncias..."
if ! command_exists supabase; then
    echo "‚ùå Supabase CLI n√£o encontrado"
    exit 1
fi

if ! command_exists curl; then
    echo "‚ùå curl n√£o encontrado"
    exit 1
fi

echo "‚úÖ Depend√™ncias verificadas"

# Verificar se estamos logados no Supabase
echo "üîê Verificando autentica√ß√£o Supabase..."
if ! supabase projects list &> /dev/null; then
    echo "‚ùå N√£o logado no Supabase. Execute: supabase login"
    exit 1
fi
echo "‚úÖ Autenticado no Supabase"

# Verificar estrutura de arquivos
echo "üìÅ Verificando estrutura de arquivos..."
FILES=(
    "supabase/functions/custom-email/index.ts"
    "src/pages/EmailConfirmationPage.tsx"
    "src/App.tsx"
)

for file in "${FILES[@]}"; do
    if [ ! -f "$file" ]; then
        echo "‚ùå Arquivo n√£o encontrado: $file"
        exit 1
    fi
done
echo "‚úÖ Estrutura de arquivos verificada"

# Verificar se a fun√ß√£o tem as URLs corretas
echo "üîç Verificando URLs na fun√ß√£o custom-email..."
if grep -q "ia.geni.chat" supabase/functions/custom-email/index.ts; then
    echo "‚úÖ URL ia.geni.chat encontrada"
else
    echo "‚ùå URL ia.geni.chat n√£o encontrada na fun√ß√£o"
    exit 1
fi

if grep -q "suporte@geni.chat" supabase/functions/custom-email/index.ts; then
    echo "‚úÖ Email de suporte correto encontrado"
else
    echo "‚ùå Email de suporte geni.chat n√£o encontrado"
    exit 1
fi

# Verificar se n√£o h√° URLs antigas
if grep -q "conversaai.com.br" supabase/functions/custom-email/index.ts; then
    echo "‚ùå URLs antigas (conversaai.com.br) ainda presentes na fun√ß√£o"
    exit 1
else
    echo "‚úÖ URLs antigas removidas"
fi

# Implantar fun√ß√£o atualizada
echo "üöÄ Implantando fun√ß√£o custom-email..."
if supabase functions deploy custom-email --project-ref hpovwcaskorzzrpphgkc; then
    echo "‚úÖ Fun√ß√£o implantada com sucesso"
else
    echo "‚ùå Erro ao implantar fun√ß√£o"
    exit 1
fi

# Verificar se a fun√ß√£o est√° respondendo
echo "üåê Testando conectividade da fun√ß√£o..."
FUNCTION_URL="https://hpovwcaskorzzrpphgkc.supabase.co/functions/v1/custom-email"

# Teste b√°sico de conectividade (deve retornar erro 405 para GET)
if curl -s -o /dev/null -w "%{http_code}" "$FUNCTION_URL" | grep -q "405"; then
    echo "‚úÖ Fun√ß√£o est√° respondendo"
else
    echo "‚ùå Fun√ß√£o n√£o est√° respondendo corretamente"
fi

echo ""
echo "üéâ TESTE COMPLETO!"
echo "================"
echo ""
echo "üìù PR√ìXIMOS PASSOS MANUAIS:"
echo "1. Configure as vari√°veis de ambiente no Dashboard do Supabase"
echo "   (consulte CONFIGURACAO_VARIAVEIS_AMBIENTE.md)"
echo ""
echo "2. Teste o registro de um novo usu√°rio:"
echo "   - Acesse https://ia.geni.chat"
echo "   - Registre uma nova conta"
echo "   - Verifique se o email chega com URLs corretas"
echo ""
echo "3. Teste a confirma√ß√£o:"
echo "   - Clique no link do email"
echo "   - Confirme que redireciona para https://ia.geni.chat/confirmar-email"
echo "   - Verifique se n√£o h√° erro de 'Token inv√°lido'"
echo ""
echo "4. Monitore os logs se necess√°rio:"
echo "   supabase functions logs custom-email --project-ref hpovwcaskorzzrpphgkc"
