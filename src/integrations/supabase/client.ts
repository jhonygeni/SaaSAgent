// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';
import { SUPABASE_CONFIG } from '../../config/environment';

// Use centralized environment configuration
const SUPABASE_URL = SUPABASE_CONFIG.url;
const SUPABASE_PUBLISHABLE_KEY = SUPABASE_CONFIG.anonKey;

// Validate required configuration
if (!SUPABASE_URL) {
  throw new Error('SUPABASE_URL is required but not configured');
}

// FALLBACK TEMPOR√ÅRIO para debug - permitir carregar mesmo com chave vazia
let effectiveAnonKey = SUPABASE_PUBLISHABLE_KEY;
if (!SUPABASE_PUBLISHABLE_KEY || SUPABASE_PUBLISHABLE_KEY.trim() === '') {
  console.error('‚ùå SUPABASE_ANON_KEY n√£o est√° configurada!');
  console.error('üí° Usando fallback tempor√°rio para debug');
  console.error('üîß Certifique-se de que VITE_SUPABASE_ANON_KEY est√° no arquivo .env');
  
  // Usar uma chave falsa temporariamente para permitir debug
  effectiveAnonKey = 'debug-mode-key';
}

console.log('üîë SUPABASE_URL:', SUPABASE_URL);
console.log('üîë SUPABASE_PUBLISHABLE_KEY:', SUPABASE_PUBLISHABLE_KEY ? SUPABASE_PUBLISHABLE_KEY.substring(0, 8) + '...' : SUPABASE_PUBLISHABLE_KEY);
console.log('[SUPABASE INIT] VITE_SUPABASE_URL:', SUPABASE_URL);
console.log('[SUPABASE INIT] VITE_SUPABASE_ANON_KEY:', SUPABASE_PUBLISHABLE_KEY);
if (!SUPABASE_URL || !SUPABASE_PUBLISHABLE_KEY) {
  console.error('[SUPABASE INIT] ‚ùå ERRO CR√çTICO: Vari√°veis de ambiente VITE_SUPABASE_URL ou VITE_SUPABASE_ANON_KEY est√£o undefined!');
  if (!SUPABASE_URL) console.error('[SUPABASE INIT] VITE_SUPABASE_URL est√° undefined!');
  if (!SUPABASE_PUBLISHABLE_KEY) console.error('[SUPABASE INIT] VITE_SUPABASE_ANON_KEY est√° undefined!');
}

export const supabase = createClient<Database>(SUPABASE_URL, effectiveAnonKey, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
  }
});
