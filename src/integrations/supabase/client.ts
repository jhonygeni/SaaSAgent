// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

// Para desenvolvimento: usar configura√ß√£o mock
const isDevelopment = import.meta.env.MODE === 'development' || import.meta.env.DEV;

console.log('üîß Supabase Client - Modo:', isDevelopment ? 'DESENVOLVIMENTO' : 'PRODU√á√ÉO');

// Configura√ß√£o mock para desenvolvimento
const MOCK_SUPABASE_URL = 'https://demo.supabase.co';
const MOCK_SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0';

let supabaseClient;

if (isDevelopment) {
  console.log('üîß Usando configura√ß√£o MOCK do Supabase para desenvolvimento');
  console.log('‚ö†Ô∏è Esta configura√ß√£o N√ÉO est√° conectada a um banco real');
  
  supabaseClient = createClient<Database>(MOCK_SUPABASE_URL, MOCK_SUPABASE_KEY, {
    auth: {
      storage: typeof window !== 'undefined' ? localStorage : undefined,
      persistSession: false,
      autoRefreshToken: false,
    }
  });
} else {
  // Em produ√ß√£o, tentar usar vari√°veis de ambiente
  const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL;
  const SUPABASE_ANON_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY;
  
  if (!SUPABASE_URL || !SUPABASE_ANON_KEY) {
    throw new Error('SUPABASE_URL and SUPABASE_ANON_KEY are required in production');
  }
  
  supabaseClient = createClient<Database>(SUPABASE_URL, SUPABASE_ANON_KEY, {
    auth: {
      storage: localStorage,
      persistSession: true,
      autoRefreshToken: true,
    }
  });
}

export const supabase = supabaseClient;
